import React, { useState, useEffect } from "react";
import Button from "@mui/material/Button";
import Link from 'next/link';
import Stack from '@mui/material/Stack';
import Typography from "@material-ui/core/Typography";
import KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';
import ContainerContent from "../components/ContainerContent";
import AreaChart from "../components/indicadores/AreaChart"
import StackedBarChart from "../components/indicadores/StackedBarChart"
import LineBarAreaComposedChart from "../components/indicadores/LineBarAreaComposedChart";


export default function Metricas() {
    const [data_severity, setDataSeverity] = useState([]);
    const [data_status, setDataStatus] = useState([]);
    const [data_host, setDataHost] = useState([]);

    async function fetchMetricas() {
        //Captura os dados de todos os tipos de metricas
        const response_severity = await fetch(`${process.env.NEXT_PUBLIC_DASH_URL}/api/metricas/severity_sum/`)
        var responseData = await response_severity.json()
        setDataSeverity(responseData);

        const response_status = await fetch(`${process.env.NEXT_PUBLIC_DASH_URL}/api/metricas/status_sum/`)
        var responseData = await response_status.json()
        setDataStatus(responseData);

        const response_host = await fetch(`${process.env.NEXT_PUBLIC_DASH_URL}/api/metricas/host_sum/`)
        var responseData = await response_host.json()
        setDataHost(responseData);
    }

    useEffect(() => { fetchMetricas() }, []); //Ao carregar a pagina chama a função fetchData

    return (
        <ContainerContent title="Métricas de Vulnerabilidades">

            <Stack direction="row" >
                <Link href={'/'} passHref >
                    <Button endIcon={<KeyboardReturnIcon />}
                    >
                        VOLTAR
                    </Button>
                </Link>
            </Stack>

            <Stack direction="row" spacing={3} sx={{ mt: 1, mb: 1 }}>

                <Typography component={"span"} sx={{ mb: 1, fontWeight: "bold" }}>
                    Métricas de Risco do Ambiente
                    <AreaChart data={data_severity[0]}></AreaChart>
                </Typography>

                <Typography component={"span"} sx={{ mb: 1, fontWeight: "bold" }}>
                    Métrica de Status das demandas
                    <StackedBarChart props={data_status[0]}></StackedBarChart>
                </Typography>
            </Stack>

            <Typography sx={{ mb: 1, fontWeight: "bold" }}>
                Métrica de risco por Hostname
                <LineBarAreaComposedChart props={data_host}></LineBarAreaComposedChart>
            </Typography>
            
        </ContainerContent>
    )
}