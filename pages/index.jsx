import React, { Component, useState, useEffect } from "react";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";
import ImportExportIcon from '@mui/icons-material/ImportExport';
import ContainerContent from "../components/ContainerContent";
import SnackAlert from "../components/SnackAlert";
import MuiDataTable from "../components/MuiDataTable";

export default function ResolvePraMim() {

    const [data, setData] = useState([]);
    const [openAlert, setOpenAlert] = useState(false);

    const handleCloseAlert = (event, reason) => {
        if (reason === "clickaway") {
            return;
        }
        setOpenAlert(false);
    };

    useEffect(() => {
        async function fetchData() {

            const response = await fetch(`${process.env.NEXT_PUBLIC_DASH_URL}/api/vulnerability_report/?page=${1}`);
            let responseData = await response.json();

            setData(responseData.results);

        }
        fetchData();
    }, []);

    // MUI Data Table ........
    const columnsTodosPedidos = [
        {
            name: "id",
            label: "ID",
            options: {},
            flex: 1,
        },
        {
            name: "hostname",
            label: "HOSTNAME",
            options: {},
            flex: 1,
        },
        {
            name: "ip_addres",
            label: "IP ADDRES",
            options: {},
            flex: 1,
        },
        {
            name: "title",
            label: "TITLE",
            options: {},
            flex: 1,
        },
        {
            name: "severity",
            label: "SEVERITY",
            options: {},
            flex: 1,
        },
        {
            name: "cvss",
            label: "CVSS",
            options: {},
            flex: 1,
        },
        {
            name: "publication_date",
            label: "PUBLICATIONS DATE",
            options: {},
            flex: 1,
        },
        {
            name: "status",
            label: "STATUS",
            options: {},
            flex: 1,
        },

    ];

    const rowsTodosPedidos = data.map((row, idx) => {
        return {
            id: row.id,
            hostname: row.hostname,
            ip_addres: row.ip_addres,
            title: row.title,
            severity: row.severity,
            cvss: row.cvss,
            publication_date: row.publication_date,
            status: row.status
        };
    });

    return (
        <>
            <ContainerContent title="Gerenciador de Vulnerabilidades">

                <MuiDataTable title={""} data={rowsTodosPedidos} columns={columnsTodosPedidos}></MuiDataTable>
                <SnackAlert message={"Não há dados para exibir."} open={openAlert} onClose={handleCloseAlert} />
            </ContainerContent>
        </>
    );
}
